/**
 * Animaciones para MCM & MCD Challenge
 * Incluye todas las animaciones, keyframes y efectos de transición
 */

/* === KEYFRAMES PRINCIPALES === */

@keyframes float {
    0%, 100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-10px);
    }
}

@keyframes glow {
    0%, 100% {
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.2);
    }
    50% {
        box-shadow: 0 0 40px rgba(255, 255, 255, 0.4);
    }
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes bounceIn {
    0% {
        opacity: 0;
        transform: scale(0.3);
    }
    50% {
        opacity: 1;
        transform: scale(1.05);
    }
    70% {
        transform: scale(0.9);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes pulse-success {
    0% {
        transform: scale(1);
        box-shadow: 0 0 30px 10px rgba(85, 239, 196, 0.6);
    }
    50% {
        transform: scale(1.03);
        box-shadow: 0 0 40px 15px rgba(85, 239, 196, 0.8);
    }
    100% {
        transform: scale(1);
        box-shadow: 0 0 30px 10px rgba(85, 239, 196, 0.6);
    }
}

@keyframes ripple {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    20% {
        transform: scale(25);
        opacity: 1;
    }
    100% {
        opacity: 0;
        transform: scale(40);
    }
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes zoomIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes heartbeat {
    0% {
        transform: scale(1);
    }
    14% {
        transform: scale(1.1);
    }
    28% {
        transform: scale(1);
    }
    42% {
        transform: scale(1.1);
    }
    70% {
        transform: scale(1);
    }
}

@keyframes rotateIn {
    from {
        transform: rotate(-200deg);
        opacity: 0;
    }
    to {
        transform: rotate(0);
        opacity: 1;
    }
}

@keyframes progressBar {
    from {
        width: 0%;
    }
    to {
        width: var(--progress-width, 100%);
    }
}

/* === CLASES DE ANIMACIÓN === */

/* Animaciones de entrada */
.animate-float {
    animation: float 3s ease-in-out infinite;
}

.animate-glow {
    animation: glow 2s ease-in-out infinite;
}

.animate-slide-up {
    animation: slideInUp 0.6s ease-out;
}

.animate-fade-left {
    animation: fadeInLeft 0.8s ease-out;
}

.animate-bounce-in {
    animation: bounceIn 0.8s ease-out;
}

.animate-fade-in {
    animation: fadeIn 0.5s ease-out;
}

.animate-slide-right {
    animation: slideInRight 0.6s ease-out;
}

.animate-zoom-in {
    animation: zoomIn 0.4s ease-out;
}

.animate-rotate-in {
    animation: rotateIn 0.6s ease-out;
}

/* Animaciones de estado */
.animate-heartbeat {
    animation: heartbeat 1.5s ease-in-out infinite;
}

.animate-shake {
    animation: shake 0.6s ease-in-out;
}

/* Animaciones con delay */
.animate-delay-100 { animation-delay: 0.1s; }
.animate-delay-200 { animation-delay: 0.2s; }
.animate-delay-300 { animation-delay: 0.3s; }
.animate-delay-400 { animation-delay: 0.4s; }
.animate-delay-500 { animation-delay: 0.5s; }

/* === EFECTOS HOVER === */

.hover-scale {
    transition: transform 0.3s ease;
}

.hover-scale:hover {
    transform: scale(1.05);
}

.hover-rotate {
    transition: transform 0.3s ease;
}

.hover-rotate:hover {
    transform: rotate(5deg);
}

.hover-brightness {
    transition: filter 0.3s ease;
}

.hover-brightness:hover {
    filter: brightness(1.2);
}

/* === ANIMACIONES ESPECÍFICAS DEL QUIZ === */

/* Entrada de preguntas */
.question-enter {
    animation: slideInUp 0.5s ease-out;
}

.question-exit {
    animation: fadeInLeft 0.3s ease-in reverse;
}

/* Feedback de respuestas */
.answer-correct {
    animation: pulse-success 1s ease-in-out;
}

.answer-incorrect {
    animation: shake 0.6s ease-in-out;
}

/* Timer animado */
.timer-warning {
    animation: glow 1s ease-in-out infinite;
    --glow-color: #ff6b6b;
}

.timer-critical {
    animation: heartbeat 0.8s ease-in-out infinite;
}

/* === ANIMACIONES DE EJERCICIOS === */

/* Revelación progresiva de pasos */
.step-reveal {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease;
}

.step-reveal.show {
    opacity: 1;
    transform: translateY(0);
}

/* Animaciones matemáticas */
.math-equation {
    animation: slideInRight 0.5s ease-out;
}

.math-result {
    animation: bounceIn 0.8s ease-out;
    animation-delay: 0.3s;
    animation-fill-mode: both;
}

.calculation-step {
    opacity: 0;
    animation: fadeIn 0.4s ease-out forwards;
}

.calculation-step:nth-child(1) { animation-delay: 0.1s; }
.calculation-step:nth-child(2) { animation-delay: 0.3s; }
.calculation-step:nth-child(3) { animation-delay: 0.5s; }
.calculation-step:nth-child(4) { animation-delay: 0.7s; }

/* === EFECTOS DE LOADING === */

.loading-spinner {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.loading-dots::after {
    content: '';
    animation: dots 1.5s steps(5, end) infinite;
}

@keyframes dots {
    0%, 20% {
        color: rgba(0,0,0,0);
        text-shadow:
            .25em 0 0 rgba(0,0,0,0),
            .5em 0 0 rgba(0,0,0,0);
    }
    40% {
        color: white;
        text-shadow:
            .25em 0 0 rgba(0,0,0,0),
            .5em 0 0 rgba(0,0,0,0);
    }
    60% {
        text-shadow:
            .25em 0 0 white,
            .5em 0 0 rgba(0,0,0,0);
    }
    80%, 100% {
        text-shadow:
            .25em 0 0 white,
            .5em 0 0 white;
    }
}

/* === ANIMACIONES DE GAMIFICACIÓN === */

/* XP Gain */
.xp-gain {
    animation: slideInUp 0.5s ease-out;
}

.level-up {
    animation: zoomIn 0.8s ease-out;
}

.achievement-unlock {
    animation: bounceIn 1s ease-out;
}

/* Confetti effect */
.confetti {
    animation: confetti-fall 3s ease-out infinite;
}

@keyframes confetti-fall {
    0% {
        transform: translateY(-100vh) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(720deg);
        opacity: 0;
    }
}

/* === ANIMACIONES RESPONSIVAS === */

@media (max-width: 768px) {
    /* Reducir intensidad de animaciones en móviles */
    .animate-float {
        animation-duration: 4s;
    }

    .animate-glow {
        animation-duration: 3s;
    }
}

/* === MODO DE ACCESIBILIDAD === */

@media (prefers-reduced-motion: reduce) {
    /* Deshabilitar animaciones para usuarios que prefieren menos movimiento */
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }

    /* Mantener solo las animaciones esenciales */
    .essential-animation {
        animation-duration: 0.3s !important;
    }
}

/* === UTILIDADES DE TRANSICIÓN === */

.transition-none { transition: none; }
.transition-all { transition: all 0.3s ease; }
.transition-colors { transition: color 0.3s ease, background-color 0.3s ease; }
.transition-opacity { transition: opacity 0.3s ease; }
.transition-transform { transition: transform 0.3s ease; }

/* Duraciones personalizadas */
.duration-75 { transition-duration: 75ms; }
.duration-100 { transition-duration: 100ms; }
.duration-150 { transition-duration: 150ms; }
.duration-200 { transition-duration: 200ms; }
.duration-300 { transition-duration: 300ms; }
.duration-500 { transition-duration: 500ms; }
.duration-700 { transition-duration: 700ms; }
.duration-1000 { transition-duration: 1000ms; }

/* Timing functions */
.ease-linear { transition-timing-function: linear; }
.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }
.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }
.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }